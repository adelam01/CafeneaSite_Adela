// <auto-generated />
using System;
using CafeneaSite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeneaSite.Migrations
{
    [DbContext(typeof(CafeneaSiteContext))]
    [Migration("20230311210842_AllAtOnce43")]
    partial class AllAtOnce43
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CafeneaSite.Models.Cafea", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireCafea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int?>("TipAromaID")
                        .HasColumnType("int");

                    b.Property<int?>("TipBoabeID")
                        .HasColumnType("int");

                    b.Property<int?>("TipCafeaID")
                        .HasColumnType("int");

                    b.Property<int?>("TipLapteID")
                        .HasColumnType("int");

                    b.Property<int?>("TipToppingID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TipAromaID");

                    b.HasIndex("TipBoabeID");

                    b.HasIndex("TipCafeaID");

                    b.HasIndex("TipLapteID");

                    b.HasIndex("TipToppingID");

                    b.ToTable("Cafea");
                });

            modelBuilder.Entity("CafeneaSite.Models.Membru", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Membru");
                });

            modelBuilder.Entity("CafeneaSite.Models.TipAroma", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireAroma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipAroma");
                });

            modelBuilder.Entity("CafeneaSite.Models.TipBoabe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireBoabe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipBoabe");
                });

            modelBuilder.Entity("CafeneaSite.Models.TipCafea", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipCafea");
                });

            modelBuilder.Entity("CafeneaSite.Models.TipLapte", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireLapte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipLapte");
                });

            modelBuilder.Entity("CafeneaSite.Models.TipTopping", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireTopping")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipTopping");
                });

            modelBuilder.Entity("CafeneaSite.Models.Cafea", b =>
                {
                    b.HasOne("CafeneaSite.Models.TipAroma", "TipAroma")
                        .WithMany("Cafele")
                        .HasForeignKey("TipAromaID");

                    b.HasOne("CafeneaSite.Models.TipBoabe", "TipBoabe")
                        .WithMany("Cafele")
                        .HasForeignKey("TipBoabeID");

                    b.HasOne("CafeneaSite.Models.TipCafea", "TipCafea")
                        .WithMany("Cafele")
                        .HasForeignKey("TipCafeaID");

                    b.HasOne("CafeneaSite.Models.TipLapte", "TipLapte")
                        .WithMany("Cafele")
                        .HasForeignKey("TipLapteID");

                    b.HasOne("CafeneaSite.Models.TipTopping", "TipTopping")
                        .WithMany("Cafele")
                        .HasForeignKey("TipToppingID");

                    b.Navigation("TipAroma");

                    b.Navigation("TipBoabe");

                    b.Navigation("TipCafea");

                    b.Navigation("TipLapte");

                    b.Navigation("TipTopping");
                });

            modelBuilder.Entity("CafeneaSite.Models.TipAroma", b =>
                {
                    b.Navigation("Cafele");
                });

            modelBuilder.Entity("CafeneaSite.Models.TipBoabe", b =>
                {
                    b.Navigation("Cafele");
                });

            modelBuilder.Entity("CafeneaSite.Models.TipCafea", b =>
                {
                    b.Navigation("Cafele");
                });

            modelBuilder.Entity("CafeneaSite.Models.TipLapte", b =>
                {
                    b.Navigation("Cafele");
                });

            modelBuilder.Entity("CafeneaSite.Models.TipTopping", b =>
                {
                    b.Navigation("Cafele");
                });
#pragma warning restore 612, 618
        }
    }
}
